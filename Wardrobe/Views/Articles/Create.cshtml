@model Wardrobe.Models.Article

@{
	ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Article</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
				</div>
			</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.Type, new List<SelectListItem>
			   {
					new SelectListItem { Text = "Top", Value = "Top" },
					new SelectListItem { Text = "Bottom", Value = "Bottom" },
					new SelectListItem { Text = "Shoes", Value = "Shoes" },
					new SelectListItem { Text = "Accessory", Value = "Accessory" }
			   }, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Season, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.Season, new List<SelectListItem>
			   {
					new SelectListItem { Text = "Any", Value = "Any" },
					new SelectListItem { Text = "Spring", Value = "Spring" },
					new SelectListItem { Text = "Summer", Value = "Summer" },
					new SelectListItem { Text = "Fall", Value = "Fall" },
					new SelectListItem { Text = "Winter", Value = "Winter" }
			   }, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Season, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Occasion, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("Occasion", null, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Occasion, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Material, "Material", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("Material", null, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
